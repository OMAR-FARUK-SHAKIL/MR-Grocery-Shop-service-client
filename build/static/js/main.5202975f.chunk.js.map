{"version":3,"sources":["components/Header/Header.js","components/Shop/Shop.js","components/Inventory/Inventory.js","components/NotFound/NotFound.js","components/ProductDetail/ProductDetail.js","components/Login/firebase.config.js","components/Login/loginManager.js","components/Login/Login.js","components/PrivateRoute/PrivateRoute.js","components/orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","useStyles","makeStyles","theme","root","flexGrow","padding","spacing","container","paddingTop","paddingBottom","textAlign","paddingLeft","Shop","useState","products","setProducts","useEffect","fetch","then","res","json","data","console","log","Grid","direction","justify","alignItems","length","id","CircularProgress","color","map","item","xs","sm","md","key","indexOf","Card","style","backgroundColor","height","width","marginLeft","CardHeader","title","name","CardContent","Typography","variant","gutterBottom","src","imageURL","alt","price","quantity","CardActions","_id","fontSize","axios","require","Inventory","useForm","register","handleSubmit","imageURl","setImageURL","document","getElementById","innerHTML","forEach","pd","p","createElement","appendChild","onClick","display","action","onSubmit","product","method","headers","body","JSON","stringify","response","alert","defaultValue","ref","required","type","onChange","event","target","files","imageData","FormData","set","append","post","display_url","catch","err","NotFound","ProductDetail","useContext","UserContext","loggedInUser","productKey","useParams","setProduct","today","Date","selectedDate","setSelectedDate","utils","DateFnsUtils","disableToolbar","format","margin","label","value","date","newDates","KeyboardButtonProps","Button","newBookings","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","updateUserName","firebase","currentUser","updateProfile","displayName","error","Login","newUser","setNewUser","isSignedIn","email","password","photo","user","setUser","setLoggedInUser","history","useHistory","from","useLocation","state","pathname","handleResponse","redirect","replace","handleBlur","e","isFieldValid","test","isPasswordValid","passwordHasNumber","newUserInfo","signOut","success","googleProvider","GoogleAuthProvider","signInWithPopup","photoURL","message","handleGoogleSignIn","htmlFor","createUserWithEmailAndPassword","signInWithEmailAndPassword","preventDefault","onBlur","placeholder","PrivateRoute","children","rest","render","location","Orders","orders","setOrders","authorization","sessionStorage","getItem","book","toDateString","createContext","App","props","Provider","path","exact","Boolean","window","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5202975f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    \r\n    return (\r\n        <div className=\"header\">\r\n            <h2>Mr.Grocery Shop and Service</h2>\r\n            <nav>\r\n                <Link to=\"/shop\">Home</Link>\r\n                <Link to=\"/orders\">Orders</Link>\r\n                <Link to=\"/inventory\">Admin</Link>\r\n                <Link to=\"/shop\">Deals</Link>\r\n                <Link to=\"/login\">Login</Link>\r\n               \r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./Shop.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  CardActions,\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent, Typography, CardHeader } from \"@material-ui/core/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(4),\r\n  },\r\n  container: {\r\n    paddingTop: \"50px\",\r\n    paddingBottom: \"20px\",\r\n    textAlign: \"center\",\r\n    paddingLeft: \"100px\",\r\n  },\r\n}));\r\n\r\nconst Shop = () => {\r\n  const classes = useStyles();\r\n\r\n  const [products, setProducts] = useState([]);\r\n  // const [cart, setCart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://nameless-plateau-15904.herokuapp.com/products\")\r\n      .then((res) => res.json())\r\n      .then((data) => setProducts(data));\r\n  }, []);\r\n\r\n  // useEffect(()=>{\r\n  //     const savedCart = getDatabaseCart();\r\n  //     const productKeys = Object.keys(savedCart);\r\n  //    if(products.length)\r\n  //    {\r\n  //     const previousCart = productKeys.map( existingKey => {\r\n  //         const product = products.find( pd => pd.key === existingKey);\r\n  //         product.quantity = savedCart[existingKey];\r\n  //         return product;\r\n  //     } )\r\n  //     setCart(previousCart);\r\n  //    }\r\n  // }, [products])\r\n\r\n  console.log(products);\r\n  return (\r\n    <div className=\"twin-container\">\r\n      <Grid\r\n        container\r\n        spacing={6}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        {products.length === 0 && (\r\n          <div id=\"loading\">\r\n            <CircularProgress />\r\n            <CircularProgress color=\"secondary\" />\r\n            <h1>Loading...</h1>\r\n          </div>\r\n        )}\r\n\r\n        {products.map((item) => (\r\n          <Grid item xs={12} sm={6} md={4} key={products.indexOf(item)}>\r\n            <Card\r\n              style={{\r\n                backgroundColor: \"#dfe6cc\",\r\n                height: 500,\r\n                width: 300,\r\n                marginLeft: 30,\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              <CardHeader title={`ProductName : ${item.name}`} />\r\n              <CardContent>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  <img src={item.imageURL} width=\"80%\" alt=\"\" />\r\n                  <h4>Price: {item.price}</h4>\r\n                  <h4>Available: {item.quantity}</h4>\r\n                </Typography>\r\n              </CardContent>\r\n\r\n              <CardActions>\r\n                <Link to={`/product/${item._id}`}>\r\n                  <button style={{ fontSize: \"20px\" }}>Buy Now</button>\r\n                </Link>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"./Inventory.css\";\r\nconst axios = require(\"axios\");\r\n\r\nconst Inventory = () => {\r\n  const { register, handleSubmit } = useForm();\r\n  const [imageURl, setImageURL] = useState(null);\r\n\r\n  const [products, setProducts] = useState([]);\r\n\r\n  function loadData() {\r\n    // useEffect(()=>{\r\n    fetch(\"https://nameless-plateau-15904.herokuapp.com/products\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(\"data=\", data);\r\n        // setProducts(data);\r\n\r\n        const container = document.getElementById(\"manage-product\");\r\n        container.innerHTML = \"\";\r\n        data.forEach((pd) => {\r\n          // console.log('data=', pd.name);\r\n\r\n          const p = document.createElement(\"p\");\r\n          p.innerHTML = `${pd.name} --price:${pd.price} --quantity:${pd.quantity}\r\n            <button onclick=\"update()\">update</button>\r\n            <button onclick=\"deleteProduct(${pd._id})\">delete</button><hr>`;\r\n          //  p.textContent = text;\r\n          container.appendChild(p);\r\n          \r\n        });\r\n      });\r\n  }\r\n  loadData();\r\n\r\n// const allGoods =()=>{\r\n\r\n//   fetch(\"http://localhost:4000/products\")\r\n//   fetch(\"https://nameless-plateau-15904.herokuapp.com//products\")\r\n//     .then((res) => res.json())\r\n//     .then((data) => setProducts(data));\r\n\r\n// }\r\n// allGoods();\r\n\r\n\r\n  const deleteProduct = (id) => {\r\n     console.log(id);\r\n    fetch(`https://nameless-plateau-15904.herokuapp.com/delete/${id}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n          alert('deleted successfully,Reload please!');\r\n        console.log(\"deleted successfully!!\");\r\n        if (result) {\r\n          // event.target.parentNode.style.display='none';\r\n        //   loadData();\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(\"form submitted\", data);\r\n    const product = {\r\n      name: data.name,\r\n      price: data.price,\r\n      quantity: data.quantity,\r\n      imageURL: imageURl,\r\n    };\r\n    fetch(\"https://nameless-plateau-15904.herokuapp.com/addProduct\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(product),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data) {\r\n          console.log(data);\r\n           alert('Your order submitted successfully');\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleImageUpload = (event) => {\r\n    console.log(event.target.files[0]);\r\n    const imageData = new FormData();\r\n    imageData.set(\"key\", \"fb591b302a303b79a247b8e957b14fc2\");\r\n    imageData.append(\"image\", event.target.files[0]);\r\n    axios\r\n      .post(\"https://api.imgbb.com/1/upload\", imageData)\r\n      .then((res) => {\r\n        console.log(res.data.data.display_url);\r\n        setImageURL(res.data.data.display_url);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n\r\n\r\n\r\n  const newProduct = () => {\r\n    document.getElementById(\"new-product\").style.display = \"block\";\r\n    document.getElementById(\"manage-product\").style.display = \"none\";\r\n  };\r\n  const manageProduct = () => {\r\n    document.getElementById(\"new-product\").style.display = \"none\";\r\n    document.getElementById(\"manage-product\").style.display = \"block\";\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <button onClick={newProduct}>Insert New Product</button><br></br>\r\n      <button onClick={manageProduct}>Manage Product</button>\r\n\r\n      <div id=\"new-product\">\r\n        <form action=\"\" onSubmit={handleSubmit(onSubmit)}>\r\n          <p>\r\n            <span>Name:</span>\r\n            <input\r\n              name=\"name\"\r\n              defaultValue=\"potato\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </p>\r\n\r\n          <p>\r\n            <span>Price:</span>\r\n            <input\r\n              name=\"price\"\r\n              defaultValue=\"20\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </p>\r\n          <p>\r\n            <span>Quantity:</span>\r\n            <input\r\n              name=\"quantity\"\r\n              defaultValue=\"1\"\r\n              ref={register({ required: true })}\r\n            />\r\n          </p>\r\n          <p>\r\n            <span>Product Image:</span>\r\n            <input type=\"file\" onChange={handleImageUpload} />\r\n          </p>\r\n\r\n          <input type=\"submit\" />\r\n          \r\n        </form>\r\n      </div>\r\n\r\n      <div id=\"manage-product\">\r\n      {/* {products.length === 0 && (\r\n            <h1>Loading...</h1>      \r\n         )} \r\n         { products.map(item =>\r\n         <li>\r\n            <h3>name:{item.name} --price:{item.price} --quantity:{item.quantity}</h3>\r\n            <button onClick={deleteProduct(`${item._id}`)}>Delete</button>\r\n            </li>\r\n            )}\r\n            */}\r\n         </div> \r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>Sorry, page not found</h1>\r\n            <h3>404 Error!!!</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import './ProductDetail.css';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { UserContext } from '../../App';\r\nimport {  Grid } from \"@material-ui/core\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst ProductDetail = () => {\r\n \r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const {productKey} = useParams();\r\n    const [product,setProduct] = useState({});\r\n    const [selectedDate, setSelectedDate] = useState({\r\n        today:new Date(),  \r\n    });\r\n    const handleCurrentDate = (date) => {\r\n        const newDates = {...selectedDate};\r\n        newDates.today = date;\r\n        setSelectedDate(newDates);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(`https://nameless-plateau-15904.herokuapp.com/product/${productKey}`)\r\n        .then((response) =>response.json())\r\n        .then((data) =>setProduct(data))\r\n    },[productKey])\r\n    console.log(\"pd details= \",product,productKey);\r\n\r\n\r\n\r\nconst handlePlaceOrder = () =>{\r\n    //   alert('Are you ready to Booking');\r\n    const newBookings = {...loggedInUser,...selectedDate,...product};\r\n    fetch('https://nameless-plateau-15904.herokuapp.com/placeOrder',{\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(newBookings)\r\n    })\r\n    .then(res => res.json())\r\n    .then(data =>{\r\n        // console.log(data)\r\n        data &&\r\n        alert('Your order placed successfully.Thank you.');\r\n    })\r\n  }\r\n\r\n    return (\r\n        <div className=\"product-details\">\r\n            <h1>Your Product Details.</h1>\r\n            <div>\r\n\r\n             <h3>{product.name}</h3> \r\n             <img src={product.imageURL} alt=\"\"/> \r\n      \r\n            </div>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <Grid container justify=\"space-around\">\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"MM/dd/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-inline\"\r\n            label=\"Check In Date \"\r\n            value={selectedDate.today}\r\n            onChange={handleCurrentDate}\r\n            KeyboardButtonProps={{\r\n              \"aria-label\": \"change date\",\r\n            }}\r\n          />\r\n          \r\n        </Grid>\r\n        <Button onClick={handlePlaceOrder} variant=\"contained\" color=\"primary\">\r\n        Place Order\r\n        </Button>\r\n      \r\n      </MuiPickersUtilsProvider>\r\n           \r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductDetail;","const firebaseConfig = {\r\n    apiKey: \"AIzaSyBHhOX8rtp2vahVcATkhTD_7CwARw6arrk\",\r\n    authDomain: \"fire-auth2.firebaseapp.com\",\r\n    databaseURL: \"https://fire-auth2.firebaseio.com\",\r\n    projectId: \"fire-auth2\",\r\n    storageBucket: \"fire-auth2.appspot.com\",\r\n    messagingSenderId: \"587131087182\",\r\n    appId: \"1:587131087182:web:f7e53e9007fe7760d7561f\"\r\n  };\r\n  export default firebaseConfig;","import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\n\r\nexport const initializeLoginFramework = () => {\r\n    if(firebase.apps.length === 0) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n}\r\n\r\nexport const handleGoogleSignIn = () => {\r\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n    return firebase.auth().signInWithPopup(googleProvider)\r\n    .then(res => {\r\n      const {displayName, photoURL, email} = res.user;\r\n      const signedInUser = {\r\n        isSignedIn: true,\r\n        name: displayName,\r\n        email: email,\r\n        photo: photoURL,\r\n        success: true\r\n      };\r\n      return signedInUser;\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      console.log(err.message);\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  export const handleSignOut = () => {\r\n    return firebase.auth().signOut()\r\n    .then(res => {\r\n      const signedOutUser = {\r\n        isSignedIn: false,\r\n        name: '',\r\n        email: '',\r\n        photo: '',\r\n        error: '',\r\n        success: false\r\n      }\r\n      return signedOutUser;\r\n    }).catch(err => {\r\n     console.log(err);\r\n    });\r\n  }\r\n\r\n export const createUserWithEmailAndPassword = (name, email, password) => {\r\n    return firebase.auth().createUserWithEmailAndPassword(email, password)\r\n    .then( res => {\r\n      const newUserInfo = res.user;\r\n      newUserInfo.error = '';\r\n      newUserInfo.success = true;\r\n      updateUserName(name);\r\n      return newUserInfo;\r\n    })\r\n    .catch( error => {\r\n      const newUserInfo = {};\r\n      newUserInfo.error = error.message;\r\n      newUserInfo.success = false;\r\n      return newUserInfo;\r\n    });\r\n }\r\n\r\n export const signInWithEmailAndPassword = (email, password) =>{\r\n    return firebase.auth().signInWithEmailAndPassword(email, password)\r\n    .then(res => {\r\n      const newUserInfo = res.user;\r\n      newUserInfo.error = '';\r\n      newUserInfo.success = true;\r\n      return newUserInfo;\r\n    })\r\n    .catch(function(error) {\r\n      const newUserInfo = {};\r\n      newUserInfo.error = error.message;\r\n      newUserInfo.success = false;\r\n      return newUserInfo;\r\n    });\r\n }\r\n\r\n const updateUserName = name =>{\r\n    const user = firebase.auth().currentUser;\r\n\r\n    user.updateProfile({\r\n      displayName: name\r\n    }).then(function() {\r\n      console.log('user name updated successfully')\r\n    }).catch(function(error) {\r\n      console.log(error)\r\n    });\r\n  }","import React, { useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport { UserContext } from '../../App';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { initializeLoginFramework, handleGoogleSignIn, handleSignOut, createUserWithEmailAndPassword, signInWithEmailAndPassword } from './loginManager';\r\n\r\n\r\n\r\nfunction Login() {\r\n  const [newUser, setNewUser] = useState(false);\r\n  const [user, setUser] = useState({\r\n    isSignedIn: false,\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    photo: ''\r\n  });\r\n\r\n  initializeLoginFramework();\r\n\r\n  const [loggedInUser, setLoggedInUser ] = useContext(UserContext);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  let { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n  const googleSignIn = () => {\r\n      handleGoogleSignIn()\r\n      .then(res => {\r\n        handleResponse(res, true);\r\n      })\r\n  }\r\n\r\n \r\n\r\n  const signOut = () => {\r\n      handleSignOut()\r\n      .then(res => {\r\n          handleResponse(res, false);\r\n      })\r\n  }\r\n\r\n  const handleResponse = (res, redirect) =>{\r\n    setUser(res);\r\n    setLoggedInUser(res);\r\n    if(redirect){\r\n        history.replace(from);\r\n    }\r\n  }\r\n\r\n  const handleBlur = (e) => {\r\n    let isFieldValid = true;\r\n    if(e.target.name === 'email'){\r\n      isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\r\n    }\r\n    if(e.target.name === 'password'){\r\n      const isPasswordValid = e.target.value.length > 6;\r\n      const passwordHasNumber =  /\\d{1}/.test(e.target.value);\r\n      isFieldValid = isPasswordValid && passwordHasNumber;\r\n    }\r\n    if(isFieldValid){\r\n      const newUserInfo = {...user};\r\n      newUserInfo[e.target.name] = e.target.value;\r\n      setUser(newUserInfo);\r\n    }\r\n  }\r\n  const handleSubmit = (e) => {\r\n    if(newUser && user.email && user.password){\r\n      createUserWithEmailAndPassword(user.name, user.email, user.password)\r\n      .then(res => {\r\n        handleResponse(res, true);\r\n      })\r\n    }\r\n\r\n    if(!newUser && user.email && user.password){\r\n      signInWithEmailAndPassword(user.email, user.password)\r\n      .then(res => {\r\n        handleResponse(res, true);\r\n      })\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div style={{textAlign: 'center',backgroundColor:'lightgrey',width:'400px',padding:50,marginLeft:500}}>\r\n      { user.isSignedIn ? <button onClick={signOut}>Sign Out</button> :\r\n        <button onClick={googleSignIn}>Log In With Google </button>\r\n      }\r\n      <br/>\r\n    \r\n\r\n\r\n    <br></br>\r\n      <input type=\"checkbox\" onChange={() => setNewUser(!newUser)} name=\"newUser\" id=\"\"/>\r\n      <label htmlFor=\"newUser\">New User Sign up</label>\r\n      <form onSubmit={handleSubmit}>\r\n        {newUser && <input name=\"name\" type=\"text\" onBlur={handleBlur} placeholder=\"Your name\"/>}\r\n        <br/>\r\n        <input type=\"text\" name=\"email\" onBlur={handleBlur} placeholder=\"Your Email address\" required/>\r\n        <br/>\r\n        <input type=\"password\" name=\"password\" onBlur={handleBlur} placeholder=\"Your Password\" required/>\r\n        <br/>\r\n        <input type=\"submit\" value={newUser ? 'Sign up' : 'Sign in'}/>\r\n      </form>\r\n      <p style={{color: 'red'}}>{user.error}</p>\r\n      { user.success && <p style={{color: 'green'}}>User { newUser ? 'created' : 'Logged In'} successfully</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\nimport { UserContext } from '../../App';\r\n\r\nconst PrivateRoute = ({children, ...rest}) => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    return (\r\n        <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        loggedInUser.email ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","\r\nimport { UserContext } from '../../App';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\n\r\nconst Orders = () => {\r\n\r\n    const [orders,setOrders] = useState([]);\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    \r\n\r\n    useEffect(() =>{\r\n\r\n        fetch('https://nameless-plateau-15904.herokuapp.com/bookings?email='+loggedInUser.email,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                authorization:`Bearer ${sessionStorage.getItem('token')}`\r\n            }\r\n            \r\n        })\r\n        .then(res => res.json())\r\n        .then(data => setOrders(data))\r\n    },[])\r\n\r\n    return (\r\n        <div style={{padding:30,backgroundColor:'lightgrey'}}>\r\n            <h1>Your all orders yet now..!!</h1>\r\n\r\n            <div>\r\n            <h3>You have : {orders.length} orders and these are:</h3>\r\n            {\r\n                orders.map(book =><li key={book._id}>\r\n  \r\n                    <h4>product Name: {book.name}\r\n                      ----price: {book.price}\r\n                     ----Date: {(new Date(book.today)).toDateString('dd/mm/yyyy')} \r\n                     </h4></li>)\r\n            }\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Orders;","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Shop from './components/Shop/Shop';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n// import Review from './components/Review/Review';\r\nimport Inventory from './components/Inventory/Inventory';\r\nimport NotFound from './components/NotFound/NotFound';\r\nimport ProductDetail from './components/ProductDetail/ProductDetail';\r\n// import Shipment from './components/Shipment/Shipment';\r\nimport Login from './components/Login/Login';\r\nimport { createContext } from 'react';\r\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\r\nimport Orders from './components/orders/Orders';\r\n\r\nexport const UserContext = createContext();\r\n\r\nfunction App(props) {\r\n  const [loggedInUser, setLoggedInUser] = useState({});\r\n\r\n  return (\r\n    <UserContext.Provider value = {[loggedInUser, setLoggedInUser]}>\r\n      <h3>email: {loggedInUser.email}</h3>\r\n      <Router>\r\n        <Header></Header>\r\n        <Switch>\r\n          <Route path=\"/shop\">\r\n            <Shop></Shop>\r\n          </Route>\r\n          {/* <Route path=\"/review\">\r\n            <Review></Review>\r\n          </Route> */}\r\n          <PrivateRoute path=\"/inventory\">\r\n            <Inventory></Inventory>\r\n          </PrivateRoute>\r\n          <Route path=\"/login\">\r\n            <Login></Login>\r\n          </Route>\r\n          {/* <PrivateRoute path=\"/shipment\">\r\n            <Shipment></Shipment>\r\n          </PrivateRoute> */}\r\n          <Route exact path=\"/\">\r\n            <Shop></Shop>\r\n          </Route>\r\n\r\n          <PrivateRoute path=\"/product/:productKey\">\r\n            <ProductDetail></ProductDetail>\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute path=\"/orders\">\r\n            <Orders></Orders>\r\n            </PrivateRoute>\r\n          <Route path=\"*\">\r\n            <NotFound></NotFound>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}